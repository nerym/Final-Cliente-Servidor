//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace r2.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.Ifunciones")]
    public interface Ifunciones {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ifunciones/guardar", ReplyAction="http://tempuri.org/Ifunciones/guardarResponse")]
        void guardar(int a, string b, string c, string d, string e, string f);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ifunciones/guardar", ReplyAction="http://tempuri.org/Ifunciones/guardarResponse")]
        System.Threading.Tasks.Task guardarAsync(int a, string b, string c, string d, string e, string f);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ifunciones/modificar", ReplyAction="http://tempuri.org/Ifunciones/modificarResponse")]
        bool modificar(int a, string b, string c, string d, string e, string f);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ifunciones/modificar", ReplyAction="http://tempuri.org/Ifunciones/modificarResponse")]
        System.Threading.Tasks.Task<bool> modificarAsync(int a, string b, string c, string d, string e, string f);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ifunciones/eliminar", ReplyAction="http://tempuri.org/Ifunciones/eliminarResponse")]
        bool eliminar(int a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ifunciones/eliminar", ReplyAction="http://tempuri.org/Ifunciones/eliminarResponse")]
        System.Threading.Tasks.Task<bool> eliminarAsync(int a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ifunciones/buscar", ReplyAction="http://tempuri.org/Ifunciones/buscarResponse")]
        string[] buscar(int cla);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Ifunciones/buscar", ReplyAction="http://tempuri.org/Ifunciones/buscarResponse")]
        System.Threading.Tasks.Task<string[]> buscarAsync(int cla);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IfuncionesChannel : r2.ServiceReference1.Ifunciones, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IfuncionesClient : System.ServiceModel.ClientBase<r2.ServiceReference1.Ifunciones>, r2.ServiceReference1.Ifunciones {
        
        public IfuncionesClient() {
        }
        
        public IfuncionesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IfuncionesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IfuncionesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IfuncionesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void guardar(int a, string b, string c, string d, string e, string f) {
            base.Channel.guardar(a, b, c, d, e, f);
        }
        
        public System.Threading.Tasks.Task guardarAsync(int a, string b, string c, string d, string e, string f) {
            return base.Channel.guardarAsync(a, b, c, d, e, f);
        }
        
        public bool modificar(int a, string b, string c, string d, string e, string f) {
            return base.Channel.modificar(a, b, c, d, e, f);
        }
        
        public System.Threading.Tasks.Task<bool> modificarAsync(int a, string b, string c, string d, string e, string f) {
            return base.Channel.modificarAsync(a, b, c, d, e, f);
        }
        
        public bool eliminar(int a) {
            return base.Channel.eliminar(a);
        }
        
        public System.Threading.Tasks.Task<bool> eliminarAsync(int a) {
            return base.Channel.eliminarAsync(a);
        }
        
        public string[] buscar(int cla) {
            return base.Channel.buscar(cla);
        }
        
        public System.Threading.Tasks.Task<string[]> buscarAsync(int cla) {
            return base.Channel.buscarAsync(cla);
        }
    }
}
